#include <stdio.h>
int N;  //세로
int M;	//가로

int r; //세로
int c; //가로
int dir;
int index[51][51];
int answer;


int real_end2;
int end;

int sol(int r_1, int c_1, int dir_1, int count)
{

	
	
	int temp_dir = dir_1;
	int temp_c = c_1;
	int temp_r = r_1;
	(temp_dir - 1 < 0) ? temp_dir = 3 : temp_dir--;
	if (dir_1 == 0) {
		temp_c = c_1 - 1;
	}
	else if (dir_1 == 1) {
		temp_r = r_1 - 1;
	}
	else if (dir_1 == 2) {
		temp_c = c_1 + 1;
	}
	else if (dir_1 == 3) {
		temp_r = r_1 + 1;
	}
	
	if (index[temp_r][temp_c] == 0)
	{
		
		index[temp_r][temp_c] = 1;
		answer++;
		sol(temp_r, temp_c, temp_dir, 0);
	}
	//왼쪽에 청소공간이없으면 왼쪽으로 회전후 2번으로 돌아감.
	else if(count!=4)
	{

		sol(r_1, c_1, temp_dir, count + 1);

	}


	else if (count == 4) {
		

		temp_c = c_1;
		temp_r = r_1;
		//후진하고 2번으로

		if (dir_1 == 0) {
			temp_r = r_1 + 1;
		}
		else if (dir_1 == 1) {
			temp_c = c_1 - 1;
		}
		else if (dir_1 == 2) {
			temp_r = r_1 - 1;
		}
		else if (dir_1 == 3) {
			temp_c = c_1 + 1;
		}

		if(index[temp_r][temp_c]!=2)
		sol(temp_r, temp_c, dir_1, 0);

	}
	


}

int main()
{
	
	scanf("%d %d", &N, &M);
	scanf("%d %d %d", &r, &c, &dir);
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			int k = 0;
			scanf("%d", &k);
			if(k==1)
				k++;
			index[i][j] = k;
		}
	}
	if (index[r][c] == 0) {
		answer++;
		index[r][c] = 1;
	}
	sol(r, c, dir, 0);
	
	printf("%d", answer);
}
